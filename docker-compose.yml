version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: online_school_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-online_school_prod}
      POSTGRES_USER: ${DB_USER:-online_school_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-online_school_pass}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-online_school_user} -d ${DB_NAME:-online_school_prod}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - online_school_network

  redis:
    image: redis:7-alpine
    container_name: online_school_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - online_school_network

  web:
    build: .
    container_name: online_school_web
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-online_school_prod}
      - DB_USER=${DB_USER:-online_school_user}
      - DB_PASSWORD=${DB_PASSWORD:-online_school_pass}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - .:/app
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - online_school_network
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        gunicorn --bind 0.0.0.0:8000 --workers 3 config.wsgi:application
      "

  celery_worker:
    build: .
    container_name: online_school_celery_worker
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-online_school_prod}
      - DB_USER=${DB_USER:-online_school_user}
      - DB_PASSWORD=${DB_PASSWORD:-online_school_pass}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - online_school_network
    command: celery -A config worker --loglevel=info

  celery_beat:
    build: .
    container_name: online_school_celery_beat
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-online_school_prod}
      - DB_USER=${DB_USER:-online_school_user}
      - DB_PASSWORD=${DB_PASSWORD:-online_school_pass}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - online_school_network
    command: celery -A config beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  online_school_network:
    driver: bridge